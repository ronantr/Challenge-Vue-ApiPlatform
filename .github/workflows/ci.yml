name: CI

on:
  push:
    branches:
      - main

  pull_request: ~
  workflow_dispatch: ~

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Create Env file
        run: |
          touch client/.env
          touche api/.env
          echo "VITE_APP_STRIPE_PUBLIC_KEY=${{secrets.VITE_APP_STRIPE_PUBLIC_KEY}}" >> ./client/.env \
          echo "VITE_API_URL=${{secrets.VITE_API_URL}}" >> ./client/.env 
          echo "APP_SECRET=${{secrets.APP_SECRET}}" >> ./api/.env 
          echo "APP_ENV=${{secrets.APP_ENV}}" >> ./api/.env
          echo "TRUSTED_HOSTS=${{secrets.TRUSTED_HOSTS}}" >> ./api/.env
          echo "TRUSTED_PROXIES=${{secrets.TRUSTED_PROXIES}}" >> ./api/.env
          echo "DATABASE_URL=${{secrets.DATABASE_URL}}" >> ./api/.env
          echo "JWT_PASSPHRASE=${{secrets.JWT_PASSPHRASE}}" >> ./api/.env
          echo "MERCURE_JWT_SECRET=${{secrets.MERCURE_JWT_SECRET}}" >> ./api/.env
          echo "MERCURE_PUBLIC_URL=${{secrets.MERCURE_PUBLIC_URL}}" >> ./api/.env
          echo "MERCURE_URL=${{secrets.MERCURE_URL}}" >> ./api/.env
          echo "SENDIN_BLUE_API_KEY=${{secrets.SENDIN_BLUE_API_KEY}}" >> ./api/.env
          echo "APP_SECRET=${{secrets.APP_SECRET}}" >> ./api/.env
          echo "APP_SECRET=${{secrets.APP_SECRET}}" >> ./api/.env
          echo "CORS_ALLOW_ORIGIN=${{secrets.CORS_ALLOW_ORIGIN}}" >> ./api/.env
          
      - name: Pull images
        run: docker compose pull --ignore-pull-failures || true
      - name: Start services
        run: docker compose up --build -d
      - name: Run Vuejs tests
        run: |
          cd vuejs
          npm install
          npm run build
      - name: Wait for services
        run: |
          while status="$(docker inspect --format="{{if .Config.Healthcheck}}{{print .State.Health.Status}}{{end}}" "$(docker compose ps -q php)")"; do
            case $status in
              starting) sleep 1;;
              healthy) exit 0;;
              unhealthy)
                docker compose ps
                docker compose logs
                exit 1
              ;;
            esac
          done
          exit 1
      - name: Check HTTP reachability
        run: curl -v -o /dev/null http://localhost
      - name: Check API reachability
        run: curl -vk -o /dev/null https://localhost
      - name: Check PWA reachability
        run: "curl -vk -o /dev/null -H 'Accept: text/html' https://localhost"
      - name: Create test database
        run: |
          docker compose exec -T php bin/console -e test doctrine:database:create
          docker compose exec -T php bin/console -e test doctrine:migrations:migrate --no-interaction
      - name: Doctrine Schema Validator
        run: docker compose exec -T php bin/console doctrine:schema:validate --skip-sync
